name: CI Build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  windows:
    runs-on: windows-2019
    env:
      QT_VERSION: "5.15.2"
      OBS_GIT_TAG: "27.0.1"
      BOOST_VERSION: "1_77_0"
      BOOST_DOWNLOAD_URL: "https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.7z"
      WEBSOCKETPP_GIT_TAG: "0.8.2"
      BUILD_TYPE: "RelWithDebInfo"
    steps:
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/deps/Qt
          key: ${{ runner.os }}-cache-qt-${{ env.QT_VERSION }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
          version: ${{ env.QT_VERSION }}
          dir: ${{ github.workspace }}/deps/
      - name: Cache obs-studio
        id: cache-obs-studio
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/deps/obs-deps
            ${{ github.workspace }}/obs-studio
          key: ${{ runner.os }}-cache-obs-${{ env.OBS_GIT_TAG }}-${{ env.BUILD_TYPE }}
      - name: Install pre-built obs dependencies
        if: steps.cache-obs-studio.outputs.cache-hit != 'true'
        run: |
          curl -fsLO https://cdn-fastly.obsproject.com/downloads/dependencies2019.zip
          7z x dependencies2019.zip -o${{ github.workspace }}/deps/obs-deps
      - name: Checkout obs-studio
        if: steps.cache-obs-studio.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: obsproject/obs-studio
          ref: ${{ env.OBS_GIT_TAG }}
          path: ${{ github.workspace }}/obs-studio
          submodules: "recursive"
      - name: Build obs-studio
        if: steps.cache-obs-studio.outputs.cache-hit != 'true'
        working-directory: ${{ github.workspace }}/obs-studio
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" -DDepsPath="${{ github.workspace }}/deps/obs-deps/win64" -DQTDIR="${{ github.workspace }}/deps/Qt/${{ env.QT_VERSION }}/msvc2019_64" -DCOPIED_DEPENDENCIES=NO -DCOPY_DEPENDENCIES=YES -DBUILD_BROWSER=OFF ..
          cmake --build libobs --config ${{ env.BUILD_TYPE }}
          cmake --build UI/obs-frontend-api --config ${{ env.BUILD_TYPE }}
      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/deps/boost
          key: ${{ runner.os }}-cache-boost-${{ env.BOOST_VERSION }}-with-filesystem-random
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          curl -fsLO ${{ env.BOOST_DOWNLOAD_URL }}
          7z x boost_${{ env.BOOST_VERSION }}.7z -o${{ github.workspace }}/deps/boost
          cd ${{ github.workspace }}/deps/boost/boost_${{ env.BOOST_VERSION }}
          ./bootstrap
          ./b2 --with-filesystem --with-random
      - name: Install JSON for Modern C++
        run: |
          cd ${{ github.workspace }}/deps
          mkdir json\nlohmann
          cd json\nlohmann
          curl -fsLO https://github.com/nlohmann/json/releases/download/v3.10.2/json.hpp
      - name: Checkout WebSocket++
        uses: actions/checkout@v2
        with:
          repository: zaphoyd/websocketpp
          ref: ${{ env.WEBSOCKETPP_GIT_TAG }}
          path: ${{ github.workspace }}/deps/websocketpp
      - name: Checkout obs-usukawa
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/obs-usukawa
          submodules: "recursive"
      - name: Build obs-usukawa
        shell: bash
        working-directory: ${{ github.workspace }}/obs-usukawa
        run: |
          mkdir build
          cd build
          cmake -G "Visual Studio 16 2019" \
            -DQTDIR="${{ github.workspace }}/deps/Qt/${{ env.QT_VERSION }}/msvc2019_64" \
            -DLibObs_DIR="${{ github.workspace }}/obs-studio/build/libobs" \
            -DBOOST_ROOT="${{ github.workspace }}/deps/boost/boost_${{ env.BOOST_VERSION }}" -DBoost_USE_STATIC_LIBS=ON \
            -DWEBSOCKETPP_ROOT="${{ github.workspace }}/deps/websocketpp" \
            -DJSON_ROOT="${{ github.workspace }}/deps/json" \
            ..
          cmake --build . --config ${{ env.BUILD_TYPE }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: obs-usukawa-windows-x64
          path: ${{ github.workspace }}/obs-usukawa/build/${{ env.BUILD_TYPE }}
